mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
results[[row_index]] <- data.frame(from = from_user, to = to_user, stringsAsFactors = FALSE)
row_index <- row_index + 1
}
}
}
mentions <- do.call(rbind, results) # transform the list of dataframe in a dataframe
head(mentions)
mention_counts <- as.data.frame(table(mentions$from, mentions$to), stringsAsFactors = FALSE)
mention_counts <- mention_counts[mention_counts$weight > 0, ]
net <- graph_from_data_frame(d=mention_counts, vertices = usernames, directed=F)
}
df$month <- format(df$time, "%Y-%m") # to do this we need a new column -> month
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(3,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
par(mfrow=c(4,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
df$month <- format(df$time, "%Y-%m") # to do this we need a new column -> month
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
months
length(months)
par(mfrow=c(4,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
library(igraph)
library(lubridate)
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(3,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,5))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,5))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,5))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,5))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,5))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(4,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(3,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
net <- make_empty_graph(directed=F) # start from an empty graph
# and for each month, we add the edges for the monthly tweets, measure the number of triadic closure and update the graph
triangles_over_time <- c()
months <- sort(unique(df$month))
par(mfrow=c(3,4))
for (m in months){
df_month <- df[df$month == m, ]
# this part is the same as before to create the edges:
edges <- c()
for (i in 1:nrow(df_month)) {
from_user <- df_month$username[i]
tweet_text <- df_month$tweets[i]
mentions <- regmatches(tweet_text, gregexpr("@\\w+", tweet_text))[[1]] # get the string in the text that are composed by @*username*
if (length(mentions) > 0) {
for (mention in mentions) {
to_user <- sub("@", "", mention)  # remove the @ from the username
if(to_user %in% usernames)  #  save only if the mentioned user is in our data set
edges <- c(edges, from_user, to_user)
}
}
}
if(length(edges) > 0){
new_edges <- matrix(edges, ncol=2, byrow=T)
new_nodes <- setdiff(unique(c(new_edges)), V(net)$name)
if (length(new_nodes) > 0) {
net <- add_vertices(net, length(new_nodes), name=new_nodes)
}
net <- add_edges(net, t(new_edges))
}
plot(
net,
main=paste("Rete al mese:", m),
layout=layout_with_fr(net),
vertex.size=3,
vertex.label=NA,
edge.arrow.size=.2
)
}
